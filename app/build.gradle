apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion androidCompileSdk
    defaultConfig {
        applicationId "com.defaultapps.cryptocurrency"
        minSdkVersion androidMinSdk
        targetSdkVersion androidTargetSdk
        versionCode androidVersionCode
        versionName androidVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
    }
}

dependencies {
    implementation (
            "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion",
            "com.android.support:appcompat-v7:$support",
            "com.android.support:design:$support",
            "com.android.support.constraint:constraint-layout:$constraintLayout",
            //Dagger 2
            "com.google.dagger:dagger:$dagger",
            //RxJava 2
            "io.reactivex.rxjava2:rxandroid:$rxandroid",
            "io.reactivex.rxjava2:rxjava:$rxjava",
            "com.jakewharton.rxbinding2:rxbinding:$rxbinding",
            "io.reactivex.rxjava2:rxkotlin:$rxkotlin",
            //Retrofit 2
            "com.squareup.retrofit2:retrofit:$retrofit",
            "com.squareup.retrofit2:converter-gson:$retrofit",
            "com.squareup.retrofit2:adapter-rxjava2:$retrofit",
            "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
            //Conductor
            "com.bluelinelabs:conductor:$conductor",
            //Timber
            "com.jakewharton.timber:timber:$timber",
            //Glide
            "com.github.bumptech.glide:glide:$glide")

    kapt(
            "com.google.dagger:dagger-compiler:$dagger",
            "com.github.bumptech.glide:compiler:$glide"
    )

    debugImplementation (
            //LeakCanary
            "com.squareup.leakcanary:leakcanary-android:$leakcanary"
    )

    testImplementation "junit:junit:$junit"

    androidTestImplementation (
            "com.android.support.test:runner:$runner",
            "com.android.support.test.espresso:espresso-core:$espresso")
}
